# name: Coverity-Static-Analysis
# on:
#   push:
#     branches: [ main, master, develop, stage, release ]
#   pull_request:
#     branches: [ main, master, develop, stage, release ]
#   workflow_dispatch: 
  
# jobs:
#   build:
#     runs-on: self-hosted
#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v3
#       - name: Coverity Scan
#         uses: blackduck-inc/black-duck-security-scan@v2.0.0
#         with:
#           coverity_url: ${{ vars.COVERITY_URL }}
#           coverity_user: ${{ secrets.COVERITY_USER }}
#           coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
#       - name: Archive Coverity Logs
#         uses: actions/upload-artifact@v4
#         with:
#           name: coverity-results
#           path: coverity/logs/


name: Coverity Security Scan
 
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
 
jobs:
  security_scan:
    runs-on: self-hosted
 
    steps:
      # Checkout the latest code
      - name: Checkout Code
        uses: actions/checkout@v3
 
      # Run Coverity Scan
      - name: Run Coverity Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.0.0
        with:
          coverity_url: ${{ vars.COVERITY_URL }}
          coverity_user: ${{ secrets.COVERITY_USER }}
          coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          # coverity_project_name: ${{ secrets.COVERITY_PROJECT_NAME }}
          # coverity_stream_name: ${{ secrets.COVERITY_STREAM_NAME }}
          # coverity_policy_view: 'Outstanding Issues' 
          # coverity_waitForScan: true 
          # coverity_build_command: npm run build 
          # coverity_clean_command: npm run clean
          # project_directory: './'
          include_diagnostics: true 
 
      # Run Coverity Scan for Pull Requests (PR Comments)
      # - name: Run Coverity PR Scan
      #   if: ${{ github.event_name == 'pull_request' }}
      #   uses: blackduck-inc/black-duck-security-scan@v2.0.0
      #   with:
      #     coverity_url: ${{ secrets.COVERITY_URL }}
      #     coverity_user: ${{ secrets.COVERITY_USER }}
      #     coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
      #     coverity_project_name: ${{ secrets.COVERITY_PROJECT_NAME }}
      #     coverity_stream_name: ${{ secrets.COVERITY_STREAM_NAME }}-${{ github.base_ref }}
      #     coverity_prComment_enabled: true
      #     github_token: ${{ secrets.GH_PAT_TOKEN }}
 
      # Run Black Duck Scan (SCA)
      # - name: Run Black Duck Scan
      #   run: |
      #     bridge run blackduck \
      #       --url ${{ secrets.BLACKDUCK_URL }} \
      #       --token ${{ secrets.BLACKDUCK_TOKEN }} \
      #       --project ${{ secrets.COVERITY_PROJECT_NAME }}
 
      # Archive Coverity Results
      - name: Store Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            coverity-results.json
            # blackduck-results.json
 
      # Send Failure Notification
      # - name: Send Notification on Failure
      #   if: failure()
      #   uses: skitionek/notify-microsoft-teams@v1
      #   with:
      #     webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
      #     message: "Security scan failed for ${{ github.repository }} on branch ${{ github.ref }}!"

